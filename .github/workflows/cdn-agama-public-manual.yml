name: cdn-agama-public-manual

on: 
  workflow_dispatch:
    inputs:
      ver:
        description: 'Agama version to use (ex.: agama-ci-embargo-517, agama-ci-prerelease-144)'
        required: true

jobs:
  prepare:
    runs-on: [self-hosted, osgc-solutions, ubuntu, builder]
    outputs:
      repo: ${{steps.prepare.outputs.repo}}
    steps:
    - id: prepare
      run: |
        FLAVOR=${{github.event.inputs.ver}}
        A=$(echo ${FLAVOR} | sed -E "s/(.*)-ci-(.*)-[0-9]+$/\1/")
        B=$(echo ${FLAVOR} | sed -E "s/(.*)-ci-(.*)-[0-9]+$/\2/")
        echo "::set-output name=repo::untested/main/$A/$B/focal"

  build:
    needs: prepare
    uses: intel-innersource/containers.docker.gpu.media.intel-media-delivery/.github/workflows/build.yml@master
    with:
      repo: intel/media-delivery
      gfx_repo_key: 'https://gfx-assets-build.intel.com/artifactory/api/gpg/key/public'
      gfx_repo: 'deb https://gfx-assets-build.intel.com/artifactory/gfx-debs-per-build ${{needs.prepare.outputs.repo}} ${{github.event.inputs.ver}}'
      flavor: ${{github.event.inputs.ver}}
      dockerfile: docker/ubuntu20.04/intel-gfx/Dockerfile
    secrets:
      SYS_M4_PASSWD: ${{ secrets.SYS_M4_PASSWD }}

  test-gen9:
    needs: build
    uses: intel-innersource/containers.docker.gpu.media.intel-media-delivery/.github/workflows/test.yml@master
    with:
      repo: intel/media-delivery
      image: ${{needs.build.outputs.image}}
      test_enctools: 'OFF'
      on: gen9
      kernel: linux

  test-dg1:
    needs: build
    uses: intel-innersource/containers.docker.gpu.media.intel-media-delivery/.github/workflows/test.yml@master
    with:
      repo: intel/media-delivery
      image: ${{needs.build.outputs.image}}
      test_enctools: 'ON'
      on: dg1
      kernel: prelim

  test-dg2:
    needs: build
    uses: intel-innersource/containers.docker.gpu.media.intel-media-delivery/.github/workflows/test.yml@master
    with:
      repo: intel/media-delivery
      image: ${{needs.build.outputs.image}}
      test_enctools: 'ON'
      on: dg2
      kernel: linux

  deploy:
    needs: [build, test-gen9, test-dg1, test-dg2]
    uses: intel-innersource/containers.docker.gpu.media.intel-media-delivery/.github/workflows/deploy.yml@master
    with:
      repo: intel/media-delivery
      image: ${{needs.build.outputs.image}}
      gta-asset-name: ${{github.event.inputs.ver}}

