name: build

on:
  workflow_call:
    inputs:
      # NOTE: repo/pr pair might correspond to other repo which
      # we want to build (specifically - intel/media-delivery).
      # As such, there might be actually 2 pairs at the same time:
      #  * repo/pr - which might be public intel/media-delivery and pr
      #  * private repo + pr for private repo
      repo:
        description: 'Which Github repo to clone?'
        required: false
        type: string
        default: ${{github.repository}}
      pr:
        description: 'Which PR to verify?'
        required: false
        type: string
        default: ''
      gfx_repo_key:
        description: 'Which APT repo key to use (http location)?'
        required: false
        type: string
      gfx_repo:
        description: 'Which APT repo to use?'
        required: false
        type: string
      flavor:
        description: 'What to use for docker tag?'
        required: true
        type: string
      dockerfile:
        description: 'Which dockerfile to use?'
        required: true
        type: string
    secrets:
      SYS_M4_PASSWD:
        required: false
    outputs:
      image:
        description: 'Image name pushed to docker registry'
        value: ${{ jobs.build.outputs.tagname }}

env:
  BASE_IMAGE: dockerv2-gsae-fm.gfx-assets.fm.intel.com/ubuntu:20.04
  REGISTRY: dockerv2-gsae-fm.gfx-assets.fm.intel.com/solutions
  http_proxy: http://proxy-dmz.intel.com:912
  https_proxy: http://proxy-dmz.intel.com:912
  # repositories.intel.com needs no_proxy=''
  no_proxy: 'gfx-assets-build.intel.com,repositories.gfxs.intel.com'

jobs:
  build:
    runs-on: [self-hosted, osgc-solutions, ubuntu, builder]
    outputs:
      tagname: ${{steps.build.outputs.tagname}}
    steps:
    - uses: actions/checkout@v2
      with:
        repository: ${{inputs.repo}}
    - id: build
      shell: bash
      run: |
        pr=${{inputs.pr}}
        priv_pr=${{github.event.pull_request.number}}

        tagname="$REGISTRY/intel-media-delivery/cdn/"
        if [ "${{inputs.repo}}" = "intel/media-delivery" ]; then
          tagname+=public/
        else
          tagname+=embargo/
        fi
        if [ -n "$pr" ]; then \
          tagname+=verify/$pr/
        fi
        if [ -n "$priv_pr" ]; then \
          tagname+=mr/$priv_pr
        else
          tagname+=stash/$GITHUB_RUN_ID
        fi

        image=$tagname:${{ inputs.flavor }}
        echo "Building $image ..."
        echo "  repo=${{inputs.repo}}"
        echo "  pr=$pr"
        echo "  priv_pr=$priv_pr"
        echo "  no_proxy=$no_proxy"
        echo "  gfx_repo_key=${{inputs.gfx_repo_key}}"
        echo "  gfx_repo=${{inputs.gfx_repo}}"
        echo "  flavor=${{inputs.flavor}}"
        echo "  dockerfile=${{inputs.dockerfile}}"

        if [ -n "$pr" ]; then \
          git fetch origin pull/$pr/head:pr_$pr; \
          git checkout pr_$pr; \
        fi

        docker pull $BASE_IMAGE
        MY_ARGS=()
        if [ -n "${{inputs.gfx_repo_key}}" ]; then \
          MY_ARGS+=(--build-arg INTEL_GFX_KEY_URL=${{inputs.gfx_repo_key}}); \
        fi
        if [ -n "${{inputs.gfx_repo}}" ]; then \
          MY_ARGS+=(--build-arg INTEL_GFX_APT_REPO="${{inputs.gfx_repo}}"); \
        fi
        echo " args: ${MY_ARGS[@]}"
        if [ -n "${{secrets.SYS_M4_PASSWD}}" ]; then \
          MY_ARGS+=(--build-arg USER=sys_m4); \
          MY_ARGS+=(--build-arg PASSWD=${{secrets.SYS_M4_PASSWD}}); \
        fi
        docker build \
          $(env | grep -E '_proxy=' | sed 's/^/--build-arg /') \
          --build-arg IMAGE=$BASE_IMAGE \
          --build-arg SAMPLE=cdn \
          "${MY_ARGS[@]}" \
          --build-arg IGT_REPO=https://github.com/freedesktop/xorg-intel-gpu-tools.git \
          --no-cache \
          --force-rm \
          --file ${{inputs.dockerfile}} \
          -t $image \
          .
        docker push $image
        docker rmi --force $(docker images -q $image | uniq) || true
        echo "::set-output name=tagname::$image"

