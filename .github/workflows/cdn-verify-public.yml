name: cdn-verify-public

on:
  workflow_dispatch:
    inputs:
      pr:
        description: 'PR to verify?'
        required: true
      ver:
        description: 'Agama version to use (ex.: agama-ci-embargo-517, agama-ci-prerelease-144)'
        required: false
        default: ''
  push:
    branches:
    - master
    paths:
    - '.github/workflows/cdn-verify-public.yml'
    - '.github/workflows/build.yml'
    - '.github/workflows/test.yml'
    - '.github/workflows/deploy-rolling.yml'
  pull_request:
    branches:
    - master
    paths:
    - '.github/workflows/cdn-verify-public.yml'
    - '.github/workflows/build.yml'
    - '.github/workflows/test.yml'
    - '.github/workflows/deploy-rolling.yml'

jobs:
  prepare:
    runs-on: [self-hosted, osgc-solutions, ubuntu, builder]
    outputs:
      pr: ${{steps.prepare.outputs.pr}}
      repo: ${{steps.prepare.outputs.repo}}
      url: ${{steps.prepare.outputs.url}}
      ver: ${{steps.prepare.outputs.ver}}
    steps:
    - id: prepare
      run: |
        if [[ "${{github.event_name}}" == "push" || "${{github.event_name}}" == "pull_request" ]]; then
          # NOTE: uncomment/adjust below settings for custom twicks
          #echo pr=XXX
          #echo "::notice title=pr::$pr"
          #echo "::set-output name=pr::$pr"
          echo "::set-output name=url::https://gfx-assets-build.intel.com/artifactory/gfx-debs"
          echo "::set-output name=repo::agama/prerelease/focal-untested"
          echo "::set-output name=ver::main"
        else # which is "workflow_dispatch"
          pr=${{github.event.inputs.pr}}
          ver=${{github.event.inputs.ver}}
          if [ -n "$pr" ]; then
            echo "::notice title=pr::$pr"
            echo "::set-output name=pr::$pr"
          fi
          if [ -n "$ver" ]; then
            echo "::notice title=agama.version::$ver"
            FLAVOR=$ver
            A=$(echo ${FLAVOR} | sed -E "s/(.*)-ci-(.*)-[0-9]+$/\1/")
            B=$(echo ${FLAVOR} | sed -E "s/(.*)-ci-(.*)-[0-9]+$/\2/")
            echo "::set-output name=url::https://gfx-assets-build.intel.com/artifactory/gfx-debs-per-build"
            echo "::set-output name=repo::untested/main/$A/$B/focal"
            echo "::set-output name=ver::$ver"
          fi
        fi

  build:
    needs: prepare
    uses: intel-innersource/containers.docker.gpu.media.intel-media-delivery/.github/workflows/build.yml@master
    with:
      repo: intel/media-delivery
      pr: ${{needs.prepare.outputs.pr}}
      flavor: public
      dockerfile: docker/ubuntu20.04/intel-gfx/Dockerfile

  build-ver:
    needs: prepare
    uses: intel-innersource/containers.docker.gpu.media.intel-media-delivery/.github/workflows/build.yml@master
    with:
      repo: intel/media-delivery
      pr: ${{needs.prepare.outputs.pr}}
      gfx_repo_key: 'https://gfx-assets-build.intel.com/artifactory/api/gpg/key/public'
      gfx_repo: 'deb ${{needs.prepare.outputs.url}} ${{needs.prepare.outputs.repo}} ${{needs.prepare.outputs.ver}}'
      flavor: ${{needs.prepare.outputs.ver}}
      dockerfile: docker/ubuntu20.04/intel-gfx/Dockerfile

  test-gen9:
    needs: [prepare, build]
    uses: intel-innersource/containers.docker.gpu.media.intel-media-delivery/.github/workflows/test.yml@master
    with:
      repo: intel/media-delivery
      pr: ${{needs.prepare.outputs.pr}}
      image: ${{needs.build.outputs.image}}
      test_enctools: 'OFF'
      on: gen9
      kernel: linux

  test-gen9-ver:
    needs: [prepare, build-ver]
    uses: intel-innersource/containers.docker.gpu.media.intel-media-delivery/.github/workflows/test.yml@master
    with:
      repo: intel/media-delivery
      pr: ${{needs.prepare.outputs.pr}}
      image: ${{needs.build-ver.outputs.image}}
      test_enctools: 'OFF'
      on: gen9
      kernel: linux

  test-dg1:
    needs: [prepare, build]
    uses: intel-innersource/containers.docker.gpu.media.intel-media-delivery/.github/workflows/test.yml@master
    with:
      repo: intel/media-delivery
      pr: ${{needs.prepare.outputs.pr}}
      image: ${{needs.build.outputs.image}}
      test_enctools: 'OFF'
      on: dg1
      kernel: public

  test-dg1-ver:
    needs: [prepare, build-ver]
    uses: intel-innersource/containers.docker.gpu.media.intel-media-delivery/.github/workflows/test.yml@master
    with:
      repo: intel/media-delivery
      pr: ${{needs.prepare.outputs.pr}}
      image: ${{needs.build-ver.outputs.image}}
      test_enctools: 'ON'
      on: dg1
      kernel: prelim

  test-dg2-ver:
    needs: [prepare, build-ver]
    uses: intel-innersource/containers.docker.gpu.media.intel-media-delivery/.github/workflows/test.yml@master
    with:
      repo: intel/media-delivery
      pr: ${{needs.prepare.outputs.pr}}
      image: ${{needs.build-ver.outputs.image}}
      test_enctools: 'ON'
      on: dg2
      kernel: linux

  deploy-rolling:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    needs: [build, test-gen9, test-dg1]
    uses: intel-innersource/containers.docker.gpu.media.intel-media-delivery/.github/workflows/deploy-rolling.yml@master
    with:
      repo: intel/media-delivery
      image: ${{needs.build.outputs.image}}
      gta-asset-name: agama-public

